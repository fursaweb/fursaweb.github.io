.responsive(@max_width, @rules) {
  @media only screen and (max-width: @max_width) {
    @rules();
  }
}

.responsive-min(@min_width, @rules) {
  @media only screen and (min-width: @min_width) {
    @rules();
  }
}

.responsive(@max_width, @min_width, @rules) {
  @media only screen and (min-width: @min_width) and (max-width: @max_width) {
	@rules();
  }
}

.phone(@rules) {
  .responsive(@max_width_mobile, @rules);
}

.mobile(@rules) {
  .responsive(@max_width_tablet, @rules);
}

.tablet(@rules) {
  .responsive(@max_width_tablet, @min_width_tablet, @rules);
}

.pc(@rules) {
  @media only screen and (min-width: @min_width_pc) {
	@rules();
  }
}

.transition(@a) {
  -webkit-transition: @a;
  transition: @a;
}

.animation(@rule) {
  -webkit-animation: @rule;
  animation: @rule;
}

.font-size(@sizeValue) {
  @remValue: @sizeValue;
  @pxValue: (@sizeValue * 14);
  font-size: ~"@{pxValue}px";
  font-size: ~"@{remValue}rem";
}

.opacity(@opacity) {
  opacity: @opacity;
  @ie_opacity: (@opacity*100);
  filter: e("alpha(opacity=@{ie_opacity})");
}

.inline_block() {
  display: inline-block;
  _display: inline;
  _zoom: 1;
}

.rgba_bg(@color) {
  background-color: @color;
  _background-color: none;
  @ie_color: rgbahex(@color);
  filter: e("progid:DXImageTransform.Microsoft.gradient(startColorstr=@{ie_color},endColorstr=@{ie_color})") !important;
}

.border_radius(@radius) {
  border-radius: @radius;
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
}

.border_radius_lt(@radius) {
  border-top-left-radius: @radius;
  -webkit-border-top-left-radius: @radius;
  -moz-border-top-left-radius: @radius;
}

.transform(@rules) {
  transform: @rules;
  -webkit-transform: @rules;
}

.border_radius_rt(@radius) {
  border-top-right-radius: @radius;
  -webkit-border-top-right-radius: @radius;
  -moz-border-top-right-radius: @radius;
}

.border_radius_rb(@radius) {
  border-bottom-right-radius: @radius;
  -webkit-border-bottom-right-radius: @radius;
  -moz-border-bottom-right-radius: @radius;
}

.border_radius_lb(@radius) {
  border-bottom-left-radius: @radius;
  -webkit-border-bottom-left-radius: @radius;
  -moz-border-bottom-left-radius: @radius;
}

.box_sizing(@a) {
  box-sizing: @a;
  -moz-box-sizing: @a;
  -webkit-box-sizing: @a;
}

.normal_box() {
  .box_sizing(border-box);
}

.box_shadow(@a) {
  box-shadow: @a;
  -webkit-box-shadow: @a;
  -moz-box-shadow: @a;
}

.text_shadow(@a) {
  text-shadow: @a;
  -webkit-text-shadow: @a;
  -moz-text-shadow: @a;
}

// Если не задан альфа-канал. Лечим багу в rgbahex()
.ie_gradient(@c_top,@c_btm) when (alpha(@c_top)=1) and (alpha(@c_btm)=1) {
  @start: rgbahex(fade(@c_top, 100));
  @end: rgbahex(fade(@c_btm, 100));
  filter: e("progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr=@{start},endColorstr=@{end},GradientType=0)");
  behavior: url(/@/_all_/ie9-gradient-fix.htc);
  zoom: 1;
}

.ie_gradient(@c_top,@c_btm) when not (alpha(@c_top)=1) and (alpha(@c_btm)=1) {
  @start: rgbahex(@c_top);
  @end: rgbahex(@c_btm);
  filter: e("progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr=@{start},endColorstr=@{end},GradientType=0)");
  behavior: url(/@/_all_/ie9-gradient-fix.htc);
  zoom: 1;
}

.pie_gradient(@c_top,@c_btm) {
  zoom: 1;
  behavior: url(/@/_all_/PIE.htc);
  -pie-background: linear-gradient(@c_top, @c_btm);
  -pie-watch-ancestors: 1;
}

.css_gradient(@c_top,@c_btm) {
  background: -moz-linear-gradient(top, @c_top, @c_btm);
  background: -webkit-gradient(linear, left top, left bottom, from(@c_top), to(@c_btm));
  background: -webkit-linear-gradient(top, @c_top, @c_btm);
  background: -o-linear-gradient(top, @c_top, @c_btm);
  background: -ms-linear-gradient(top, @c_top, @c_btm);
  background: linear-gradient(top, @c_top, @c_btm);
}

.grd_tb(@c_top,@c_btm) {
  .css_gradient(@c_top, @c_btm);
  .ie_gradient(@c_top, @c_btm);
}

.grd_tb_spec(@c_top,@c_btm) {
  .css_gradient(@c_top, @c_btm);
  .pie_gradient(@c_top, @c_btm);
}

.filter_fix {
  zoom: 1;
  position: relative;
}

.background_size(@size) {
  background-size: @size;
  -o-background-size: @size;
  -ms-background-size: @size;
  -moz-background-size: @size;
  -webkit-background-size: @size;
}

.rotate(@deg) {
  -webkit-transform: rotate(@deg);
  -moz-transform: rotate(@deg);
  -o-transform: rotate(@deg);
  -ms-transform: rotate(@deg);
  transform: rotate(@deg);
}

.empty() {
  height: 0;
  line-height: 0;
  font-size: 0;
}

.clear_block() {
  &:after {
	content: '';
	display: block;
	clear: both;
	.empty;
  }
}

.clickable() {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
}

.abs_over() {
  .abs_over_w;
  .abs_over_h;
}

.abs_over_w() {
  left: 0;
  right: 0;
}

.abs_over_h() {
  top: 0;
  bottom: 0;
}

.user-select(@type) {
  -webkit-user-select: @type;
  -moz-user-select: @type;
  -ms-user-select: @type;
  user-select: @type;
}
.appearance(@type) {
	-webkit-appearance: @type;
	-moz-appearance: @type;
	-o-appearance: @type;
	-ms-appearance: @type;
	appearance: @type;
}

.placeholder(@rules) {
  &::-webkit-input-placeholder { @rules();
  }
  &::-moz-placeholder { @rules();
  }
  &:-moz-placeholder { @rules();
  }
  &:-ms-input-placeholder { @rules();
  }
}

.m_center() {
  margin-left: auto;
  margin-right: auto;
}

.menu-btn(@color, @w, @h, @d) {
  &, &:before, &:after {
	background-color: @color;
	height: @h;
	width: @w;
	transition: .2s all;
	border-radius: 5px;
  }

  &:before, &:after {
	content: "";
	display: block;
	position: absolute;
  }
  &:before {
	top: -@d;
  }
  &:after {
	bottom: -@d;
  }
}

.not-touch-interface(@rules) {
	body:not(.touch-interface) & {
		@rules();
	}
}

.touch-interface(@rules) {
	body.touch-interface & {
		@rules();
	}
}

//постой цикл
.foreach(@iteration, @code) {
  & {
    .loop(@i:1) when (@i =< @iteration) {
      @code();
      .loop(@i + 1);
    }
    .loop();
  }
}

.loop(@count, @rules) {
  .foreach(@count, {
    @rules();
  });
}


.grid-justify-sw(@max-width, @count, @margin: .5%) {
  @sw-width: (100%-(2*@margin*@count))/@count;
  @media only screen and (max-width: @max-width) {
    > .sw {
      width: @sw-width;
    }
  }
}

